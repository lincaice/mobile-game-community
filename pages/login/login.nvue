<template>
	<view>
		<view class="login-page">
			<text class="login-page__title">登 录</text>
			<view class="login-page__tips">
				<text class="login-page__tips--base">请输入用户名,密码用于获取更多服务</text>
			</view>
			<mg-input class="login-page__input" placeholder="请输入用户名" v-model="loginData.userId"></mg-input>
			<mg-input class="login-page__input" placeholder="请输入密码" type="password" v-model="loginData.password">
			</mg-input>
			<u-button class='form_item' type="primary" text="登录" @click="loginHandler" :disabled="submitDisabled">
			</u-button>
			<uni-transition ref="agreeAni" :show="true">
				<u-checkbox-group v-model="agreeVal">
					<u-checkbox name='sel' size='14'>
					</u-checkbox>
					<view class="login-page__tips">
						<text class="login-page__tips--base">登录即代表您同意</text>
						<text class="login-page__tips--primary">《用户协议》</text>
						<text class="login-page__tips--base">、</text>
						<text class="login-page__tips--primary">《隐私政策》</text>
					</view>
				</u-checkbox-group>
			</uni-transition>
		</view>
		<u-modal :show="modalData.show" :title="modalData.title" @confirm="modalData.show=false">
			<view style="width: 570rpx;">
				<text class="login-page__modal-text">
					{{modalData.content}}
				</text>
			</view>
		</u-modal>
		
		<view class="login-page__footer">
			<text class="login-page__tips--base">暂无账号,点击前往</text>
			<u--text type="primary" text="注册"></u--text>
		</view>
	</view>
</template>

<script>
	import { shakeX } from '@/utils/animate.js'
	import { appLogin } from '@/api/user.js'
	import mgInput from '@/components/base/mg-input.nvue'
	export default {
		components: {
			mgInput
		},
		data() {
			return {
				submitDisabled: true,
				loginData: {
					userId: '',
					password: ''
				},
				agreeVal: [],
				modalData: {
					show: false,
					title: '登录失败',
					content: ''
				}
			}
		},
		watch: {
			loginData: {
				deep: true,
				handler(newData) {
					if (/^\w{6,16}$/g.test(newData.userId) && /^[\w!@#$%^&*+-=]{6,18}$/g.test(newData.password)) {
						this.submitDisabled = false
					} else {
						this.submitDisabled = true
					}
				}

			}
		},
		mounted() {},
		methods: {
			/**
			 * 登录按钮事件
			 */
			async loginHandler() {
				if (this.agreeVal.length === 0) {
					shakeX(this.$refs.agreeAni)
					return
				}
				uni.showLoading({
					title: '登录中'
				});
				let preTime = new Date()
				const res = await appLogin(this.loginData)
				console.log(res);
				let reqTime = preTime - new Date()
				if (reqTime >= 1000) {
					uni.hideLoading();
					this.loginProcess(res);
				} else {
					setTimeout(() => {
						uni.hideLoading();
						this.loginProcess(res);
					}, 1000 - reqTime)
				}
			},
			/**
			 * 获取数据后的操作
			 * @param {Object} res 登录接口返回的数据
			 */
			loginProcess(res) {
				if (res.code === 200) {
					console.log('登录成功');
				} else {
					this.modalData.content = res.msg;
					this.modalData.show = true;
				}
			}
		},

	}
</script>

<style scoped lang="scss">
	.login-page {
		padding: 0 40rpx;

		&__title {
			font-size: 22px;
			font-weight: 500;
		}

		&__tips {
			padding: 10px 0;
			flex-direction: row;

			&--base {
				color: $u-tips-color;
				font-size: 14px;
			}

			&--primary {
				font-size: 14px;
			}
		}

		&__input {
			margin: 8px 0;
		}
	}

	.login-page__modal-text {
		font-size: 15px;
		color: #606266;
	}

	.form_item {
		margin: 10px 0;
	}
</style>
